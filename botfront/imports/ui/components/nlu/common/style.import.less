.entity-dropdown.ui.selection.dropdown {
    border-color: fade(@teal, 50%);
    border-top: none;
    border-right: none;
    border-left: none;
    border-radius: 0;
    min-width: 12em;

    & > input.search {
        padding-left: 3em !important;
    }

    &.icon > .icon {
        background-color: fade(@teal, 5%);
        color: @teal;
    }
}

.intent-dropdown.ui.selection.dropdown {
    border-color: fade(@purple, 50%);
    border-top: none;
    border-right: none;
    border-left: none;
    border-radius: 0;
    min-width: 12em;

    & > input.search {
        padding-left: 3em !important;
    }

    &.icon > .icon {
        background-color: fade(@purple, 5%);
        color: @purple;
    }
}

.intent-label {
    display: inline-flex;
    justify-content: space-between;
    align-items: center;
    color: @purple;
    width: max-content;
    font-weight: medium;
    padding: 2px;
    margin: 0;
    border: 1px solid transparent;
    border-radius: 4px;
    cursor: default;

    &.disabled {
        color: @grey;
    }
    &.null {
        color: @grey;
    }
    .action-on-label {
        float: right;
        color: @grey;
        position: relative;
        bottom: 2px;
        visibility: hidden;
    }
    .content-on-label {
        min-width: 130px;
        position: relative;
        bottom: 1px;
    }
    &:not(.disabled):not(.uneditable):hover, &.selected {
        border: 1px solid rgba(176, 176, 176, 0.4);
        span {
            color: @grey;
        }
        .action-on-label {
            visibility: visible;
        }
    }
}

.intent-dropdown {
    .intent-label {
        &.selected {
            font-weight: bold;
        }
        border: initial;
        span {
            color: initial;
        }
    }
    .row:hover {
        cursor: pointer;
        .intent-label.selectable {
            font-weight: bold;
            cursor: pointer;
        }
    }
}

.intent-dropdown-container {
    display: flex;
    width: max-content;
}

.entity-container {
    line-height: 1.25;
    display: inline-block;
    position: relative;
    .float {
        position: absolute;
        width: 100px;
        bottom: ~"calc(100% - 1px)";
        font-size: small;
    }
}

.createentitycolorclasses(@i:1) when(@i <= length(@basic-colors)) {
    @name: extract(extract(@basic-colors, @i), 1);
    @color: extract(extract(@basic-colors, @i), 2);

    .entity-container.@{name} {
        :not(.float) {
            background-color: fade(@color, 17%);
            border-bottom: 2.5px solid @color;
        }
        .float {
            color: @color
        }
    }
    .createentitycolorclasses(@i + 1);
}

.createentitycolorclasses();

.utterance-viewer {
    .selected-text {
        background-color: #c4d8f5;
    }
    line-height: 2.25;
}

.ui.popup.canonical-popup{
    max-width: 600px;
    /* padding is moved from canonical-popup to canonical-popup-content so that
      the arrow that points to the popup trigger is not removed by overflow: hidden;
    */
    padding: 0px; // remove the default padding on the popup
    .canonical-popup-content {
      padding: 13.3px 16px 13.3px 16px; // mimic the default padding of the popup
      display: flex;
      overflow: hidden;
    }
    .icon{
      margin-right: 0.5em;
      margin-top: 6px;
    }
  }
  .canonical-popup-trigger{
    display: inline-block; // match the size of it's children
  }